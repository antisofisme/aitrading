openapi: 3.0.3
info:
  title: Embedded Chain Mapping System API
  description: |
    API specification for the embedded chain mapping system that tracks and monitors
    30 distinct chains across 5 categories in the AI trading platform.
  version: 1.0.0
  contact:
    name: AI Trading Platform Team
    email: support@aitrading.com

servers:
  - url: http://localhost:8000/api/v1
    description: Development server (API Gateway)
  - url: https://api.aitrading.com/v1
    description: Production server

tags:
  - name: chains
    description: Chain definition management
  - name: health
    description: Chain health monitoring
  - name: analysis
    description: Chain analysis and optimization
  - name: discovery
    description: Automated chain discovery
  - name: monitoring
    description: Real-time monitoring and metrics

security:
  - bearerAuth: []

paths:
  # Chain Management
  /chains:
    get:
      tags: [chains]
      summary: List all chains
      description: Retrieve a list of all chain definitions with optional filtering
      parameters:
        - name: category
          in: query
          description: Filter by chain category
          schema:
            type: string
            enum:
              - data_flow
              - service_communication
              - user_experience
              - ai_ml_processing
              - infrastructure
        - name: service
          in: query
          description: Filter by service name
          schema:
            type: string
        - name: status
          in: query
          description: Filter by chain status
          schema:
            type: string
            enum: [healthy, degraded, failed, unknown]
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of chains retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chains:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChainDefinition'
                  total:
                    type: integer
                    description: Total number of chains matching criteria
                  category_counts:
                    type: object
                    description: Count of chains by category
                    additionalProperties:
                      type: integer
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags: [chains]
      summary: Create new chain definition
      description: Create a new chain definition with nodes, edges, and dependencies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainDefinitionCreate'
      responses:
        '201':
          description: Chain created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chain_id:
                    type: string
                    example: "A7"
                  message:
                    type: string
                    example: "Chain created successfully"
                  validation_results:
                    $ref: '#/components/schemas/ValidationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          description: Chain ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /chains/{chain_id}:
    get:
      tags: [chains]
      summary: Get chain definition
      description: Retrieve detailed information about a specific chain
      parameters:
        - name: chain_id
          in: path
          required: true
          description: Chain identifier (e.g., A1, B2, C3)
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      responses:
        '200':
          description: Chain definition retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainDefinition'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags: [chains]
      summary: Update chain definition
      description: Update an existing chain definition
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChainDefinitionUpdate'
      responses:
        '200':
          description: Chain updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Chain updated successfully"
                  updated_fields:
                    type: array
                    items:
                      type: string
                    example: ["description", "nodes", "edges"]
                  validation_results:
                    $ref: '#/components/schemas/ValidationResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags: [chains]
      summary: Delete chain definition
      description: Delete a chain definition and all associated data
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
        - name: force
          in: query
          description: Force deletion even if chain is referenced by others
          schema:
            type: boolean
            default: false
      responses:
        '204':
          description: Chain deleted successfully
        '400':
          description: Cannot delete chain due to dependencies
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  dependent_chains:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Chain Health Monitoring
  /chains/{chain_id}/health:
    get:
      tags: [health]
      summary: Get chain health status
      description: Retrieve current health status and metrics for a chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
        - name: include_history
          in: query
          description: Include recent health history
          schema:
            type: boolean
            default: false
        - name: timeframe
          in: query
          description: Timeframe for health history
          schema:
            type: string
            enum: [1h, 6h, 24h]
            default: 1h
      responses:
        '200':
          description: Chain health status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainHealthStatus'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags: [health]
      summary: Trigger manual health check
      description: Manually trigger a health check for a specific chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deep_check:
                  type: boolean
                  description: Perform deep health check including dependencies
                  default: false
                timeout_ms:
                  type: integer
                  description: Timeout for health check in milliseconds
                  minimum: 100
                  maximum: 30000
                  default: 5000
      responses:
        '200':
          description: Health check completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  check_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [completed, failed, timeout]
                  duration_ms:
                    type: integer
                  results:
                    $ref: '#/components/schemas/HealthCheckResult'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /chains/{chain_id}/metrics:
    get:
      tags: [monitoring]
      summary: Get chain performance metrics
      description: Retrieve performance metrics for a chain over a specified timeframe
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
        - name: timeframe
          in: query
          description: Timeframe for metrics
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
        - name: granularity
          in: query
          description: Data point granularity
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 6h, 24h]
            default: 15m
        - name: metrics
          in: query
          description: Specific metrics to include
          schema:
            type: array
            items:
              type: string
              enum: [latency, throughput, error_rate, availability]
          style: form
          explode: false
      responses:
        '200':
          description: Chain metrics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChainMetrics'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Chain Analysis
  /chains/{chain_id}/analyze/impact:
    post:
      tags: [analysis]
      summary: Analyze change impact
      description: Analyze the potential impact of changes to a chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [change_type, target_component]
              properties:
                change_type:
                  type: string
                  enum:
                    - service_update
                    - node_modification
                    - dependency_change
                    - configuration_change
                    - scaling_change
                target_component:
                  type: string
                  description: Component being changed
                change_description:
                  type: string
                  description: Detailed description of the change
                severity:
                  type: string
                  enum: [low, medium, high, critical]
                  default: medium
                analyze_cascade:
                  type: boolean
                  description: Analyze cascade effects
                  default: true
      responses:
        '200':
          description: Impact analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImpactAnalysisResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /chains/{chain_id}/analyze/optimization:
    get:
      tags: [analysis]
      summary: Get optimization recommendations
      description: Get AI-powered optimization recommendations for a chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
        - name: optimization_type
          in: query
          description: Type of optimization to focus on
          schema:
            type: string
            enum: [performance, reliability, cost, scalability, all]
            default: all
        - name: include_predictions
          in: query
          description: Include predictive analysis
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Optimization recommendations generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptimizationRecommendations'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /chains/patterns:
    get:
      tags: [analysis]
      summary: Get detected patterns across chains
      description: Retrieve patterns detected across all chains using AI analysis
      parameters:
        - name: category
          in: query
          description: Filter patterns by chain category
          schema:
            type: string
            enum:
              - data_flow
              - service_communication
              - user_experience
              - ai_ml_processing
              - infrastructure
        - name: min_frequency
          in: query
          description: Minimum pattern frequency
          schema:
            type: integer
            minimum: 1
            default: 2
        - name: include_optimization_potential
          in: query
          description: Include optimization potential analysis
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Patterns retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  patterns:
                    type: array
                    items:
                      $ref: '#/components/schemas/ChainPattern'
                  analysis_timestamp:
                    type: string
                    format: date-time
                  total_chains_analyzed:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Chain Discovery
  /chains/discovery/scan:
    post:
      tags: [discovery]
      summary: Trigger chain discovery scan
      description: Trigger automated discovery of chains using AST parsing and runtime tracing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                discovery_methods:
                  type: array
                  items:
                    type: string
                    enum: [ast_parser, runtime_trace, service_mesh]
                  default: [ast_parser, runtime_trace]
                services:
                  type: array
                  items:
                    type: string
                  description: Specific services to scan (empty for all)
                confidence_threshold:
                  type: number
                  minimum: 0.0
                  maximum: 1.0
                  default: 0.7
                  description: Minimum confidence score for discovered chains
      responses:
        '202':
          description: Discovery scan initiated
          content:
            application/json:
              schema:
                type: object
                properties:
                  scan_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [initiated, running, completed, failed]
                  estimated_duration:
                    type: string
                    description: Estimated completion time
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /chains/discovery/results/{scan_id}:
    get:
      tags: [discovery]
      summary: Get discovery scan results
      description: Retrieve results from a chain discovery scan
      parameters:
        - name: scan_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: status_filter
          in: query
          description: Filter results by status
          schema:
            type: string
            enum: [pending_review, approved, rejected]
      responses:
        '200':
          description: Discovery results retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  scan_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [running, completed, failed]
                  discovered_chains:
                    type: array
                    items:
                      $ref: '#/components/schemas/DiscoveredChain'
                  total_discovered:
                    type: integer
                  scan_duration:
                    type: string
                  scan_timestamp:
                    type: string
                    format: date-time
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Monitoring Configuration
  /chains/{chain_id}/monitoring:
    get:
      tags: [monitoring]
      summary: Get monitoring configuration
      description: Retrieve monitoring configuration for a chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      responses:
        '200':
          description: Monitoring configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoringConfig'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags: [monitoring]
      summary: Update monitoring configuration
      description: Update monitoring configuration for a chain
      parameters:
        - name: chain_id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[A-E][1-9][0-9]*$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringConfigUpdate'
      responses:
        '200':
          description: Monitoring configuration updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updated_fields:
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ChainDefinition:
      type: object
      required: [id, name, category, nodes, edges]
      properties:
        id:
          type: string
          pattern: '^[A-E][1-9][0-9]*$'
          example: "A1"
        name:
          type: string
          maxLength: 255
          example: "Market Data Pipeline"
        category:
          $ref: '#/components/schemas/ChainCategory'
        description:
          type: string
          maxLength: 1000
          example: "Real-time market data ingestion, processing, and distribution"
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ChainNode'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/ChainEdge'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ChainDependency'
        metadata:
          type: object
          additionalProperties: true
        status:
          $ref: '#/components/schemas/ChainStatus'
        metrics:
          $ref: '#/components/schemas/ChainMetricsSummary'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        version:
          type: integer
          minimum: 1

    ChainDefinitionCreate:
      type: object
      required: [name, category, nodes, edges]
      properties:
        name:
          type: string
          maxLength: 255
        category:
          $ref: '#/components/schemas/ChainCategory'
        description:
          type: string
          maxLength: 1000
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ChainNodeCreate'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/ChainEdgeCreate'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ChainDependencyCreate'
        metadata:
          type: object
          additionalProperties: true

    ChainDefinitionUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 1000
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ChainNodeCreate'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/ChainEdgeCreate'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ChainDependencyCreate'
        metadata:
          type: object
          additionalProperties: true

    ChainNode:
      type: object
      required: [id, type, service_name]
      properties:
        id:
          type: string
          maxLength: 100
          example: "mt5_source"
        type:
          $ref: '#/components/schemas/NodeType'
        service_name:
          type: string
          maxLength: 100
          example: "data-bridge"
        component_name:
          type: string
          maxLength: 200
          example: "mt5_websocket_handler"
        config:
          type: object
          additionalProperties: true
        position:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
        health_check:
          $ref: '#/components/schemas/HealthCheckConfig'

    ChainNodeCreate:
      type: object
      required: [id, type, service_name]
      properties:
        id:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/NodeType'
        service_name:
          type: string
          maxLength: 100
        component_name:
          type: string
          maxLength: 200
        config:
          type: object
          additionalProperties: true
        position:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
        health_check:
          $ref: '#/components/schemas/HealthCheckConfig'

    ChainEdge:
      type: object
      required: [id, source_node, target_node, type]
      properties:
        id:
          type: string
          maxLength: 100
        source_node:
          type: string
          maxLength: 100
        target_node:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/EdgeType'
        condition:
          type: string
          maxLength: 500
        latency_sla:
          type: integer
          minimum: 1
          description: Expected latency in milliseconds
        retry_policy:
          $ref: '#/components/schemas/RetryPolicy'

    ChainEdgeCreate:
      type: object
      required: [source_node, target_node, type]
      properties:
        source_node:
          type: string
          maxLength: 100
        target_node:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/EdgeType'
        condition:
          type: string
          maxLength: 500
        latency_sla:
          type: integer
          minimum: 1
        retry_policy:
          $ref: '#/components/schemas/RetryPolicy'

    ChainDependency:
      type: object
      required: [id, type, target]
      properties:
        id:
          type: string
          maxLength: 100
        type:
          $ref: '#/components/schemas/DependencyType'
        target:
          type: string
          maxLength: 200
        criticality:
          $ref: '#/components/schemas/CriticalityLevel'
        fallback:
          type: string
          maxLength: 500

    ChainDependencyCreate:
      type: object
      required: [type, target]
      properties:
        type:
          $ref: '#/components/schemas/DependencyType'
        target:
          type: string
          maxLength: 200
        criticality:
          $ref: '#/components/schemas/CriticalityLevel'
        fallback:
          type: string
          maxLength: 500

    ChainCategory:
      type: string
      enum:
        - data_flow
        - service_communication
        - user_experience
        - ai_ml_processing
        - infrastructure

    NodeType:
      type: string
      enum:
        - service
        - api_endpoint
        - database
        - cache
        - queue
        - ai_model
        - websocket
        - external_api

    EdgeType:
      type: string
      enum:
        - http_request
        - websocket_message
        - database_query
        - cache_operation
        - event_publish
        - ai_inference

    DependencyType:
      type: string
      enum:
        - service
        - database
        - external_api
        - cache
        - queue
        - configuration

    CriticalityLevel:
      type: string
      enum:
        - critical
        - high
        - medium
        - low

    ChainStatus:
      type: string
      enum:
        - healthy
        - degraded
        - failed
        - unknown

    HealthCheckConfig:
      type: object
      properties:
        enabled:
          type: boolean
          default: true
        endpoint:
          type: string
          format: uri
        timeout_ms:
          type: integer
          minimum: 100
          maximum: 30000
          default: 5000
        interval_seconds:
          type: integer
          minimum: 10
          maximum: 3600
          default: 60

    RetryPolicy:
      type: object
      properties:
        max_retries:
          type: integer
          minimum: 0
          maximum: 10
          default: 3
        backoff_strategy:
          type: string
          enum: [fixed, exponential, linear]
          default: exponential
        initial_delay_ms:
          type: integer
          minimum: 100
          maximum: 10000
          default: 1000
        max_delay_ms:
          type: integer
          minimum: 1000
          maximum: 60000
          default: 30000

    ChainHealthStatus:
      type: object
      properties:
        chain_id:
          type: string
        status:
          $ref: '#/components/schemas/ChainStatus'
        overall_score:
          type: number
          minimum: 0
          maximum: 100
        node_health:
          type: array
          items:
            type: object
            properties:
              node_id:
                type: string
              status:
                $ref: '#/components/schemas/ChainStatus'
              latency:
                type: number
                description: Current latency in milliseconds
              error_rate:
                type: number
                minimum: 0
                maximum: 1
                description: Error rate as decimal (0.01 = 1%)
              last_check:
                type: string
                format: date-time
        sla_compliance:
          type: object
          properties:
            meets_sla:
              type: boolean
            latency_sla:
              type: number
            actual_latency:
              type: number
            uptime_sla:
              type: number
            actual_uptime:
              type: number
        health_history:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              status:
                $ref: '#/components/schemas/ChainStatus'
              score:
                type: number
        last_check:
          type: string
          format: date-time

    HealthCheckResult:
      type: object
      properties:
        overall_status:
          $ref: '#/components/schemas/ChainStatus'
        node_results:
          type: array
          items:
            type: object
            properties:
              node_id:
                type: string
              status:
                $ref: '#/components/schemas/ChainStatus'
              response_time:
                type: number
              error_message:
                type: string
        dependency_results:
          type: array
          items:
            type: object
            properties:
              dependency_id:
                type: string
              status:
                $ref: '#/components/schemas/ChainStatus'
              response_time:
                type: number
              error_message:
                type: string

    ChainMetrics:
      type: object
      properties:
        chain_id:
          type: string
        timeframe:
          type: string
        granularity:
          type: string
        data_points:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              latency:
                type: object
                properties:
                  avg:
                    type: number
                  p50:
                    type: number
                  p95:
                    type: number
                  p99:
                    type: number
              throughput:
                type: number
                description: Requests per second
              error_rate:
                type: number
                minimum: 0
                maximum: 1
              availability:
                type: number
                minimum: 0
                maximum: 1
        summary:
          type: object
          properties:
            avg_latency:
              type: number
            p95_latency:
              type: number
            avg_throughput:
              type: number
            overall_error_rate:
              type: number
            overall_availability:
              type: number

    ChainMetricsSummary:
      type: object
      properties:
        avg_latency:
          type: number
        p95_latency:
          type: number
        error_rate:
          type: number
        availability:
          type: number
        last_updated:
          type: string
          format: date-time

    ImpactAnalysisResult:
      type: object
      properties:
        analysis_id:
          type: string
          format: uuid
        chain_id:
          type: string
        change_description:
          type: string
        impact_score:
          type: number
          minimum: 0
          maximum: 10
          description: Impact severity score
        risk_level:
          type: string
          enum: [low, medium, high, critical]
        affected_chains:
          type: array
          items:
            type: object
            properties:
              chain_id:
                type: string
              impact_type:
                type: string
                enum: [direct, indirect, cascade]
              severity:
                type: string
                enum: [low, medium, high, critical]
        mitigation_strategies:
          type: array
          items:
            type: object
            properties:
              strategy:
                type: string
              description:
                type: string
              effort:
                type: string
                enum: [low, medium, high]
              effectiveness:
                type: number
                minimum: 0
                maximum: 1
        cascade_analysis:
          type: object
          properties:
            potential_failures:
              type: array
              items:
                type: string
            propagation_path:
              type: array
              items:
                type: string
            time_to_impact:
              type: string
        confidence:
          type: number
          minimum: 0
          maximum: 1
        analysis_timestamp:
          type: string
          format: date-time

    OptimizationRecommendations:
      type: object
      properties:
        chain_id:
          type: string
        analysis_timestamp:
          type: string
          format: date-time
        optimizations:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
                enum: [performance, reliability, cost, scalability]
              title:
                type: string
              description:
                type: string
              expected_improvement:
                type: object
                properties:
                  metric:
                    type: string
                  current_value:
                    type: number
                  projected_value:
                    type: number
                  improvement_percent:
                    type: number
              implementation_effort:
                type: string
                enum: [low, medium, high]
              priority:
                type: string
                enum: [low, medium, high, critical]
              confidence:
                type: number
                minimum: 0
                maximum: 1
              prerequisites:
                type: array
                items:
                  type: string
        predictions:
          type: object
          properties:
            bottlenecks:
              type: array
              items:
                type: object
                properties:
                  node_id:
                    type: string
                  predicted_load:
                    type: number
                  capacity_limit:
                    type: number
                  time_to_bottleneck:
                    type: string
            scaling_recommendations:
              type: array
              items:
                type: object
                properties:
                  component:
                    type: string
                  current_capacity:
                    type: number
                  recommended_capacity:
                    type: number
                  scaling_strategy:
                    type: string

    ChainPattern:
      type: object
      properties:
        pattern_id:
          type: string
        name:
          type: string
        description:
          type: string
        frequency:
          type: integer
          description: Number of chains exhibiting this pattern
        chains:
          type: array
          items:
            type: string
          description: Chain IDs exhibiting this pattern
        pattern_type:
          type: string
          enum: [structural, behavioral, performance, error]
        optimization_potential:
          type: number
          minimum: 0
          maximum: 1
          description: Potential for optimization (0-1 scale)
        recommendations:
          type: array
          items:
            type: string
        confidence:
          type: number
          minimum: 0
          maximum: 1

    DiscoveredChain:
      type: object
      properties:
        discovery_id:
          type: string
          format: uuid
        proposed_chain_id:
          type: string
        name:
          type: string
        category:
          $ref: '#/components/schemas/ChainCategory'
        description:
          type: string
        discovery_method:
          type: string
          enum: [ast_parser, runtime_trace, service_mesh]
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/ChainNodeCreate'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/ChainEdgeCreate'
        evidence:
          type: object
          properties:
            source_files:
              type: array
              items:
                type: string
            trace_data:
              type: object
            network_flows:
              type: array
              items:
                type: object
        status:
          type: string
          enum: [pending_review, approved, rejected]
        discovered_at:
          type: string
          format: date-time

    MonitoringConfig:
      type: object
      properties:
        chain_id:
          type: string
        monitoring_enabled:
          type: boolean
        check_interval:
          type: integer
          minimum: 10
          maximum: 3600
          description: Health check interval in seconds
        alert_thresholds:
          type: object
          properties:
            latency_threshold:
              type: number
              description: Alert when latency exceeds this value (ms)
            error_rate_threshold:
              type: number
              minimum: 0
              maximum: 1
              description: Alert when error rate exceeds this value
            availability_threshold:
              type: number
              minimum: 0
              maximum: 1
              description: Alert when availability drops below this value
        notification_config:
          type: object
          properties:
            email_enabled:
              type: boolean
            webhook_enabled:
              type: boolean
            webhook_url:
              type: string
              format: uri
            severity_filter:
              type: array
              items:
                type: string
                enum: [low, medium, high, critical]
        escalation_rules:
          type: array
          items:
            type: object
            properties:
              condition:
                type: string
              delay_minutes:
                type: integer
              action:
                type: string

    MonitoringConfigUpdate:
      type: object
      properties:
        monitoring_enabled:
          type: boolean
        check_interval:
          type: integer
          minimum: 10
          maximum: 3600
        alert_thresholds:
          type: object
          properties:
            latency_threshold:
              type: number
            error_rate_threshold:
              type: number
              minimum: 0
              maximum: 1
            availability_threshold:
              type: number
              minimum: 0
              maximum: 1
        notification_config:
          type: object
          properties:
            email_enabled:
              type: boolean
            webhook_enabled:
              type: boolean
            webhook_url:
              type: string
              format: uri
            severity_filter:
              type: array
              items:
                type: string
                enum: [low, medium, high, critical]

    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
              severity:
                type: string
                enum: [error, warning, info]
        warnings:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

    Pagination:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        has_next:
          type: boolean
        has_previous:
          type: boolean

    Error:
      type: object
      required: [error, message]
      properties:
        error:
          type: string
          example: "validation_failed"
        message:
          type: string
          example: "Request validation failed"
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Bad request - validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'