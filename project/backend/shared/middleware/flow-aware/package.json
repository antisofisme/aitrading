{
  "name": "@aitrading/flow-aware-middleware",
  "version": "1.0.0",
  "description": "Enterprise-grade flow tracking and dependency analysis middleware for microservices",
  "main": "index.js",
  "keywords": [
    "microservices",
    "flow-tracking",
    "dependency-analysis",
    "performance-monitoring",
    "distributed-tracing",
    "express-middleware",
    "error-correlation"
  ],
  "author": "AI Trading Platform Team",
  "license": "PROPRIETARY",
  "engines": {
    "node": ">=14.0.0"
  },
  "dependencies": {
    "uuid": "^9.0.0",
    "winston": "^3.8.0",
    "express": "^4.18.0",
    "axios": "^1.4.0",
    "node-fetch": "^3.3.0"
  },
  "devDependencies": {
    "jest": "^29.5.0",
    "supertest": "^6.3.0",
    "@types/express": "^4.17.0",
    "eslint": "^8.40.0"
  },
  "peerDependencies": {
    "express": ">=4.0.0"
  },
  "scripts": {
    "test": "jest",
    "test:unit": "jest unit.test.js",
    "test:integration": "jest integration.test.js",
    "test:performance": "jest performance-validation.test.js",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint *.js",
    "lint:fix": "eslint *.js --fix"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "*.js",
      "!index.js",
      "!README.md"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  },
  "files": [
    "*.js",
    "README.md",
    "package.json"
  ],
  "repository": {
    "type": "git",
    "url": "internal"
  },
  "performance": {
    "overhead": "<1ms",
    "throughput": ">10000 RPS",
    "memory": "<5MB per service",
    "cpu": "<2% overhead"
  },
  "features": {
    "flowTracking": "Unique flow IDs for end-to-end tracing",
    "dependencyAnalysis": "Automatic service dependency detection",
    "realTimeMetrics": "Sub-millisecond performance monitoring",
    "errorCorrelation": "Chain-aware error tracking",
    "autoIntegration": "Zero-config microservice integration",
    "multiChannelEvents": "Flexible event publishing"
  }
}