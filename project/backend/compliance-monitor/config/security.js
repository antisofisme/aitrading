/**
 * Security Middleware Configuration
 * Generated by Service Port Coordinator
 */

const helmet = require('helmet');
const cors = require('cors');
const rateLimit = require('express-rate-limit');

const securityConfig = {
    // CORS Configuration
    cors: {
        origin: process.env.CORS_ORIGIN?.split(',') || ['http://localhost:3000'],
        credentials: true,
        methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
        allowedHeaders: ['Content-Type', 'Authorization', 'X-Tenant-ID']
    },

    // Rate Limiting
    rateLimit: {
        windowMs: 15 * 60 * 1000, // 15 minutes
        max: process.env.NODE_ENV === 'production' ? 100 : 1000,
        message: 'Too many requests from this IP',
        standardHeaders: true,
        legacyHeaders: false
    },

    // Helmet Security Headers
    helmet: {
        contentSecurityPolicy: {
            directives: {
                defaultSrc: ["'self'"],
                styleSrc: ["'self'", "'unsafe-inline'"],
                scriptSrc: ["'self'"],
                imgSrc: ["'self'", "data:", "https:"],
                connectSrc: ["'self'"],
                fontSrc: ["'self'"],
                objectSrc: ["'none'"],
                mediaSrc: ["'self'"],
                frameSrc: ["'none'"]
            }
        },
        crossOriginEmbedderPolicy: false
    }
};

const applySecurity = (app) => {
    // Apply Helmet
    app.use(helmet(securityConfig.helmet));

    // Apply CORS
    app.use(cors(securityConfig.cors));

    // Apply Rate Limiting
    app.use('/api/', rateLimit(securityConfig.rateLimit));

    // Security Headers
    app.use((req, res, next) => {
        res.set('X-Content-Type-Options', 'nosniff');
        res.set('X-Frame-Options', 'DENY');
        res.set('X-XSS-Protection', '1; mode=block');
        next();
    });

    // Request logging middleware
    app.use((req, res, next) => {
        console.log(`${new Date().toISOString()} - ${req.method} ${req.path} - ${req.ip}`);
        next();
    });
};

module.exports = { securityConfig, applySecurity };