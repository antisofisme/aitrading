/**
 * Database Configuration - Standardized Connection Settings
 * Generated by Service Port Coordinator
 */

const { Pool } = require('pg');

const dbConfig = {
    host: process.env.DB_HOST || 'localhost',
    port: parseInt(process.env.DB_PORT) || 5432,
    database: process.env.DB_NAME || 'aitrading_main',
    user: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASSWORD || 'postgres',

    // Connection Pool Settings
    max: parseInt(process.env.DB_POOL_SIZE) || 10,
    min: 2,
    idle: 10000,
    evict: 1000,
    acquire: 30000,

    // Connection Settings
    connectionTimeoutMillis: parseInt(process.env.DB_CONNECTION_TIMEOUT) || 30000,
    idleTimeoutMillis: 30000,

    // SSL Configuration
    ssl: process.env.NODE_ENV === 'production' ? {
        rejectUnauthorized: false
    } : false,

    // Error Handling
    keepAlive: true,
    keepAliveInitialDelayMillis: 10000,
};

// Create connection pool
const pool = new Pool(dbConfig);

// Handle pool errors
pool.on('error', (err) => {
    console.error('Database pool error:', err);
});

// Health check function
const healthCheck = async () => {
    try {
        const client = await pool.connect();
        await client.query('SELECT 1');
        client.release();
        return { healthy: true, timestamp: new Date().toISOString() };
    } catch (error) {
        return {
            healthy: false,
            error: error.message,
            timestamp: new Date().toISOString()
        };
    }
};

module.exports = {
    pool,
    config: dbConfig,
    healthCheck
};