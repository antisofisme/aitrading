version: '3.8'

services:
  database-service:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: aitrading-database-service
    ports:
      - "8008:8008"
    environment:
      - NODE_ENV=production
      - PORT=8008
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=aitrading
      - DB_USER=postgres
      - DB_PASSWORD=aitrading_password
      - CENTRAL_HUB_URL=http://central-hub:8000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - aitrading-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: aitrading-postgres
    environment:
      - POSTGRES_DB=aitrading
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=aitrading_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - aitrading-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d aitrading"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: aitrading-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - aitrading-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  aitrading-network:
    driver: bridge
    name: aitrading-network