{
  "name": "@aitrading/backend",
  "version": "1.0.0",
  "description": "AI Trading Platform - Microservices Backend Infrastructure (Phase 1)",
  "private": true,
  "type": "module",
  "scripts": {
    "start": "npm run docker:up",
    "dev": "docker-compose -f docker-compose.dev.yml up --build",
    "dev:services": "concurrently \"npm run dev:gateway\" \"npm run dev:hub\" \"npm run dev:db\" \"npm run dev:bridge\"",
    "dev:gateway": "cd api-gateway && npm run dev",
    "dev:hub": "cd central-hub && npm run dev",
    "dev:db": "cd database-service && npm run dev",
    "dev:bridge": "cd data-bridge && npm run dev",
    "prod": "docker-compose -f docker-compose.prod.yml up --build",
    "test": "npm run test:all",
    "test:all": "npm run test:shared && npm run test:services",
    "test:services": "npm-run-all --parallel test:*:unit",
    "test:gateway:unit": "cd api-gateway && npm test",
    "test:hub:unit": "cd central-hub && npm test",
    "test:db:unit": "cd database-service && npm test",
    "test:bridge:unit": "cd data-bridge && npm test",
    "test:shared": "cd shared && npm test",
    "test:integration": "jest --config=jest.integration.config.js",
    "test:e2e": "jest --config=jest.e2e.config.js",
    "build": "npm run build:all",
    "build:all": "npm run build:shared && npm run build:services",
    "build:shared": "cd shared && npm run build",
    "build:services": "npm-run-all --parallel build:*:service",
    "build:gateway:service": "cd api-gateway && npm run build",
    "build:hub:service": "cd central-hub && npm run build",
    "build:db:service": "cd database-service && npm run build",
    "build:bridge:service": "cd data-bridge && npm run build",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down --volumes --remove-orphans && docker system prune -f",
    "health": "node scripts/health-check.js",
    "health:services": "npm-run-all --parallel health:*:check",
    "health:gateway:check": "curl -f http://localhost:8000/health || exit 1",
    "health:hub:check": "curl -f http://localhost:8001/health || exit 1",
    "health:db:check": "curl -f http://localhost:8002/health || exit 1",
    "health:bridge:check": "curl -f http://localhost:8003/health || exit 1",
    "logs": "docker-compose logs -f",
    "logs:services": "npm-run-all --parallel logs:*:tail",
    "logs:gateway:tail": "cd api-gateway && npm run logs",
    "logs:hub:tail": "cd central-hub && npm run logs",
    "logs:db:tail": "cd database-service && npm run logs",
    "logs:bridge:tail": "cd data-bridge && npm run logs",
    "clean": "npm run docker:clean && npm run clean:modules",
    "clean:modules": "rm -rf node_modules */node_modules",
    "setup": "npm run setup:env && npm run setup:db && npm run setup:monitoring",
    "setup:env": "node scripts/setup-environment.js",
    "setup:db": "cd database-service && npm run migrate",
    "setup:monitoring": "node scripts/setup-monitoring.js",
    "lint": "npm-run-all --parallel lint:*:check",
    "lint:gateway:check": "cd api-gateway && npm run lint",
    "lint:hub:check": "cd central-hub && npm run lint",
    "lint:db:check": "cd database-service && npm run lint",
    "lint:bridge:check": "cd data-bridge && npm run lint",
    "lint:shared:check": "cd shared && npm run lint",
    "format": "npm-run-all --parallel format:*:fix",
    "format:gateway:fix": "cd api-gateway && npm run format",
    "format:hub:fix": "cd central-hub && npm run format",
    "format:db:fix": "cd database-service && npm run format",
    "format:bridge:fix": "cd data-bridge && npm run format",
    "format:shared:fix": "cd shared && npm run format"
  },
  "workspaces": {
    "packages": [
      "shared",
      "api-gateway",
      "central-hub",
      "database-service",
      "data-bridge",
      "monitoring",
      "scripts"
    ],
    "nohoist": [
      "**/bcrypt",
      "**/sharp",
      "**/sqlite3",
      "**/canvas"
    ]
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "morgan": "^1.10.0",
    "dotenv": "^16.3.1",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "redis": "^4.6.10",
    "ioredis": "^5.3.2",
    "bull": "^4.12.2",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "compression": "^1.7.4",
    "uuid": "^9.0.1",
    "jsonwebtoken": "^9.0.2",
    "bcryptjs": "^2.4.3",
    "axios": "^1.6.2",
    "node-cron": "^3.0.3",
    "consul": "^0.40.0",
    "prometheus-client": "^15.1.0",
    "pino": "^8.17.2",
    "pino-pretty": "^10.3.1",
    "fastify": "^4.25.2",
    "@fastify/cors": "^8.4.1",
    "@fastify/helmet": "^11.1.1",
    "@fastify/rate-limit": "^9.1.0",
    "elastic-apm-node": "^4.5.1"
  },
  "devDependencies": {
    "@types/node": "^20.10.0",
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/morgan": "^1.9.9",
    "@types/compression": "^1.7.5",
    "@types/uuid": "^9.0.7",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/bcryptjs": "^2.4.6",
    "@types/node-cron": "^3.0.11",
    "typescript": "^5.3.0",
    "ts-node": "^10.9.0",
    "ts-node-dev": "^2.0.0",
    "nodemon": "^3.0.2",
    "concurrently": "^8.2.2",
    "npm-run-all": "^4.1.5",
    "wait-on": "^7.2.0",
    "cross-env": "^7.0.3",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.8",
    "jest-environment-node": "^29.7.0",
    "supertest": "^6.3.3",
    "@types/supertest": "^6.0.2",
    "eslint": "^8.56.0",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "rimraf": "^5.0.5",
    "docker-compose": "^0.24.6",
    "newman": "^6.0.0",
    "k6": "^0.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/aitrading-platform"
  },
  "keywords": [
    "trading",
    "forex",
    "mt5",
    "microservices",
    "api",
    "infrastructure",
    "kubernetes",
    "docker",
    "service-discovery",
    "monitoring"
  ],
  "author": "AI Trading Platform Team",
  "license": "PROPRIETARY",
  "config": {
    "registry": "http://localhost:4873",
    "loglevel": "info"
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:all"
    }
  },
  "volta": {
    "node": "18.19.0",
    "npm": "10.2.3"
  }
}