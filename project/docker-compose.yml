version: '3.8'

networks:
  ai-trading-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
  dragonfly_data:
  clickhouse_data:
  weaviate_data:
  arangodb_data:
  arangodb_apps:
  # Legacy Redis for backward compatibility
  redis_data:

services:
  # Database Services
  postgres:
    image: postgres:15
    container_name: ai-trading-postgres
    environment:
      POSTGRES_DB: ai_trading
      POSTGRES_USER: ai_trading_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database-service/schemas:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_trading_user -d ai_trading"]
      interval: 30s
      timeout: 10s
      retries: 3

  # DragonflyDB (High-Performance Cache - replaces Redis)
  dragonflydb:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: ai-trading-dragonflydb
    ports:
      - "6379:6379"
    environment:
      - DFLY_PASSWORD=${DRAGONFLY_PASSWORD:-}
    command: dragonfly --requirepass "${DRAGONFLY_PASSWORD:-}" --alsologtostderr
    volumes:
      - dragonfly_data:/data
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${DRAGONFLY_PASSWORD:-}", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Weaviate (Vector/AI Database)
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: ai-trading-weaviate
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=text2vec-cohere,text2vec-huggingface,text2vec-openai,generative-openai,ref2vec-centroid
      - CLUSTER_HOSTNAME=node1
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 5s
      retries: 5

  # ArangoDB (Graph Database)
  arangodb:
    image: arangodb:latest
    container_name: ai-trading-arangodb
    ports:
      - "8529:8529"
    environment:
      - ARANGO_ROOT_PASSWORD=${ARANGO_PASSWORD:-secure_password_789}
    volumes:
      - arangodb_data:/var/lib/arangodb3
      - arangodb_apps:/var/lib/arangodb3-apps
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8529/_api/version"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Legacy Redis (for backward compatibility)
  redis:
    image: redis:7-alpine
    container_name: ai-trading-redis
    ports:
      - "6380:6379"  # Different port to avoid conflict with DragonflyDB
    volumes:
      - redis_data:/data
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: ai-trading-clickhouse
    environment:
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./backend/database-service/schemas/chain-debug-clickhouse.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "8123:8123"
      - "9000:9000"
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core Services
  api-gateway:
    build: ./backend/api-gateway
    container_name: ai-trading-api-gateway
    environment:
      PORT: 3001
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  data-bridge:
    build: ./backend/data-bridge
    container_name: ai-trading-data-bridge
    environment:
      PORT: 5001
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  central-hub:
    build: ./backend/central-hub
    container_name: ai-trading-central-hub
    environment:
      PORT: 7000
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "7000:7000"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  database-service:
    build: ./backend/database-service
    container_name: ai-trading-database-service
    environment:
      PORT: 8008
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8008:8008"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  configuration-service:
    build: ./backend/configuration-service
    container_name: ai-trading-configuration-service
    environment:
      CONFIG_SERVICE_PORT: 8012
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_ENABLED: "true"
      JWT_SECRET: ${JWT_SECRET:-super_secret_jwt_key_change_in_production}
    ports:
      - "8012:8012"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-orchestrator:
    build: ./backend/ai-orchestrator
    container_name: ai-trading-ai-orchestrator
    environment:
      LEVEL4_ORCHESTRATOR_PORT: 8020
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8020:8020"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8020/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ml-predictor:
    build: ./backend/ml-predictor
    container_name: ai-trading-ml-predictor
    environment:
      PORT: 8021
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8021:8021"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8021/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  risk-analyzer:
    build: ./backend/risk-analyzer
    container_name: ai-trading-risk-analyzer
    environment:
      PORT: 8022
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8022:8022"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8022/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  trading-engine:
    build: ./backend/trading-engine
    container_name: ai-trading-trading-engine
    environment:
      PORT: 9000
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9000:9000"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  portfolio-manager:
    build: ./backend/portfolio-manager
    container_name: ai-trading-portfolio-manager
    environment:
      PORT: 9001
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9001:9001"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-management:
    build: ./backend/order-management
    container_name: ai-trading-order-management
    environment:
      PORT: 9002
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9002:9002"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build: ./backend/notification-service
    container_name: ai-trading-notification-service
    environment:
      PORT: 9003
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9003:9003"
    depends_on:
      postgres:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  performance-analytics:
    build: ./backend/performance-analytics
    container_name: ai-trading-performance-analytics
    environment:
      PORT: 9100
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9100:9100"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  usage-monitoring:
    build: ./backend/usage-monitoring
    container_name: ai-trading-usage-monitoring
    environment:
      PORT: 9101
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9101:9101"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9101/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  revenue-analytics:
    build: ./backend/revenue-analytics
    container_name: ai-trading-revenue-analytics
    environment:
      PORT: 9102
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "9102:9102"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9102/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flow-Aware Error Handling Services
  chain-debug-system:
    build: ./backend/chain-debug-system
    container_name: ai-trading-chain-debug-system
    environment:
      PORT: 8030
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8030:8030"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8030/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  ai-chain-analytics:
    build: ./backend/ai-chain-analytics
    container_name: ai-trading-ai-chain-analytics
    environment:
      PORT: 8031
      NODE_ENV: ${NODE_ENV:-development}
      POSTGRES_URL: postgresql://ai_trading_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/ai_trading
      DRAGONFLY_HOST: dragonflydb
      DRAGONFLY_PORT: 6379
      DRAGONFLY_PASSWORD: ${DRAGONFLY_PASSWORD:-}
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_DB: ${CLICKHOUSE_DB:-aitrading_analytics}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-secure_password_456}
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
      ARANGO_URL: http://arangodb:8529
      ARANGO_DB: ${ARANGO_DB:-aitrading_graph}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD:-secure_password_789}
      CLICKHOUSE_URL: http://clickhouse:8123
      DRAGONFLY_URL: redis://dragonflydb:6379
      REDIS_URL: redis://redis:6380  # Legacy Redis on different port
      FLOW_REGISTRY_URL: http://configuration-service:8012
    ports:
      - "8031:8031"
    depends_on:
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      dragonflydb:
        condition: service_healthy
      configuration-service:
        condition: service_healthy
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8031/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Monitoring & Management
  nginx:
    image: nginx:alpine
    container_name: ai-trading-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./project/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./project/nginx/ssl:/etc/ssl/nginx:ro
    depends_on:
      - api-gateway
      - configuration-service
      - chain-debug-system
      - ai-chain-analytics
    networks:
      - ai-trading-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3