import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Typography,\n  Link,\n  Alert,\n  CircularProgress,\n  Container,\n  Divider,\n  InputAdornment,\n  IconButton,\n  useTheme,\n  alpha,\n} from '@mui/material';\nimport {\n  Visibility,\n  VisibilityOff,\n  Email,\n  Lock,\n  TrendingUp,\n  Login as LoginIcon,\n} from '@mui/icons-material';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport NextLink from 'next/link';\nimport { useAuth } from '@/hooks/useAuth';\nimport { useGuestOnly } from '@/hooks/useAuth';\n\ninterface LoginForm {\n  email: string;\n  password: string;\n}\n\nconst LoginPage: React.FC = () => {\n  const theme = useTheme();\n  const router = useRouter();\n  const { login, isLoading, error, clearError } = useGuestOnly();\n\n  // Form state\n  const [form, setForm] = useState<LoginForm>({\n    email: '',\n    password: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [formErrors, setFormErrors] = useState<Partial<LoginForm>>({});\n\n  // Validation\n  const validateForm = (): boolean => {\n    const errors: Partial<LoginForm> = {};\n\n    if (!form.email) {\n      errors.email = 'Email is required';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(form.email)) {\n      errors.email = 'Please enter a valid email address';\n    }\n\n    if (!form.password) {\n      errors.password = 'Password is required';\n    } else if (form.password.length < 6) {\n      errors.password = 'Password must be at least 6 characters';\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // Handlers\n  const handleInputChange = (field: keyof LoginForm) => (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setForm({ ...form, [field]: event.target.value });\n    \n    // Clear field error when user starts typing\n    if (formErrors[field]) {\n      setFormErrors({ ...formErrors, [field]: undefined });\n    }\n    \n    // Clear global error\n    if (error) {\n      clearError();\n    }\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      await login(form.email, form.password);\n      // Redirect will be handled by useGuestOnly hook\n      router.push('/dashboard');\n    } catch (err) {\n      // Error will be displayed via the error state from useAuth\n      console.error('Login failed:', err);\n    }\n  };\n\n  const handleTogglePassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <>\n      <Head>\n        <title>Login - AI Trading Platform</title>\n        <meta name=\"description\" content=\"Sign in to your AI Trading Platform account\" />\n      </Head>\n      \n      <Box\n        sx={{\n          minHeight: '100vh',\n          display: 'flex',\n          alignItems: 'center',\n          bgcolor: alpha(theme.palette.primary.main, 0.02),\n          backgroundImage: `linear-gradient(45deg, ${alpha(theme.palette.primary.main, 0.05)} 25%, transparent 25%), \n                           linear-gradient(-45deg, ${alpha(theme.palette.primary.main, 0.05)} 25%, transparent 25%), \n                           linear-gradient(45deg, transparent 75%, ${alpha(theme.palette.primary.main, 0.05)} 75%), \n                           linear-gradient(-45deg, transparent 75%, ${alpha(theme.palette.primary.main, 0.05)} 75%)`,\n          backgroundSize: '20px 20px',\n          backgroundPosition: '0 0, 0 10px, 10px -10px, -10px 0px',\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <Card\n            sx={{\n              borderRadius: 4,\n              boxShadow: theme.shadows[8],\n              overflow: 'hidden',\n            }}\n          >\n            {/* Header */}\n            <Box\n              sx={{\n                bgcolor: 'primary.main',\n                color: 'primary.contrastText',\n                py: 4,\n                textAlign: 'center',\n              }}\n            >\n              <TrendingUp sx={{ fontSize: 48, mb: 1 }} />\n              <Typography variant=\"h4\" fontWeight={600}>\n                AI Trading Platform\n              </Typography>\n              <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                Advanced Trading with Artificial Intelligence\n              </Typography>\n            </Box>\n\n            <CardContent sx={{ p: 4 }}>\n              <Typography variant=\"h5\" fontWeight={600} gutterBottom textAlign=\"center\">\n                Welcome Back\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" textAlign=\"center\" sx={{ mb: 3 }}>\n                Please sign in to your account to continue\n              </Typography>\n\n              {/* Error Alert */}\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3 }}>\n                  {error}\n                </Alert>\n              )}\n\n              {/* Login Form */}\n              <Box component=\"form\" onSubmit={handleSubmit}>\n                <TextField\n                  fullWidth\n                  label=\"Email Address\"\n                  type=\"email\"\n                  value={form.email}\n                  onChange={handleInputChange('email')}\n                  error={!!formErrors.email}\n                  helperText={formErrors.email}\n                  disabled={isLoading}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Email color=\"action\" />\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ mb: 2 }}\n                  autoComplete=\"email\"\n                  autoFocus\n                />\n\n                <TextField\n                  fullWidth\n                  label=\"Password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={form.password}\n                  onChange={handleInputChange('password')}\n                  error={!!formErrors.password}\n                  helperText={formErrors.password}\n                  disabled={isLoading}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Lock color=\"action\" />\n                      </InputAdornment>\n                    ),\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          onClick={handleTogglePassword}\n                          edge=\"end\"\n                          disabled={isLoading}\n                        >\n                          {showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ mb: 3 }}\n                  autoComplete=\"current-password\"\n                />\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  size=\"large\"\n                  disabled={isLoading}\n                  startIcon={isLoading ? <CircularProgress size={20} /> : <LoginIcon />}\n                  sx={{ py: 1.5, mb: 2 }}\n                >\n                  {isLoading ? 'Signing In...' : 'Sign In'}\n                </Button>\n              </Box>\n\n              <Divider sx={{ my: 3 }}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Need an account?\n                </Typography>\n              </Divider>\n\n              {/* Register Link */}\n              <Box textAlign=\"center\">\n                <NextLink href=\"/register\" passHref>\n                  <Link underline=\"hover\" color=\"primary\">\n                    Create a new account\n                  </Link>\n                </NextLink>\n              </Box>\n\n              {/* Forgot Password */}\n              <Box textAlign=\"center\" mt={2}>\n                <NextLink href=\"/forgot-password\" passHref>\n                  <Link underline=\"hover\" color=\"text.secondary\" variant=\"body2\">\n                    Forgot your password?\n                  </Link>\n                </NextLink>\n              </Box>\n            </CardContent>\n\n            {/* Demo Info */}\n            <Box\n              sx={{\n                bgcolor: alpha(theme.palette.info.main, 0.1),\n                border: `1px solid ${alpha(theme.palette.info.main, 0.2)}`,\n                p: 2,\n                m: 2,\n                borderRadius: 2,\n              }}\n            >\n              <Typography variant=\"body2\" color=\"info.main\" textAlign=\"center\" fontWeight={500}>\n                Demo Account Available\n              </Typography>\n              <Typography variant=\"caption\" color=\"text.secondary\" textAlign=\"center\" display=\"block\">\n                Email: demo@aitrading.com | Password: demo123\n              </Typography>\n            </Box>\n          </Card>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default LoginPage;"