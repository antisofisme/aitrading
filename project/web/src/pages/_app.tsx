import React from 'react';\nimport type { AppProps } from 'next/app';\nimport Head from 'next/head';\nimport { AuthProvider } from '@/hooks/useAuth';\nimport { ThemeProvider } from '@/hooks/useThemeMode';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { SnackbarProvider } from 'notistack';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport ErrorBoundary from '@/components/common/ErrorBoundary';\nimport LoadingProvider from '@/components/common/LoadingProvider';\nimport '@/styles/globals.css';\n\n// Create a client for React Query\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      refetchOnWindowFocus: false,\n      retry: (failureCount, error) => {\n        // Don't retry on 401/403 errors\n        if (error && typeof error === 'object' && 'status' in error) {\n          const status = (error as any).status;\n          if (status === 401 || status === 403) {\n            return false;\n          }\n        }\n        return failureCount < 3;\n      },\n    },\n  },\n});\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return (\n    <>\n      <Head>\n        <title>AI Trading Platform</title>\n        <meta name=\"description\" content=\"Advanced AI-powered trading platform with real-time analytics\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"theme-color\" content=\"#1976d2\" />\n        \n        {/* PWA */}\n        <link rel=\"manifest\" href=\"/manifest.json\" />\n        <link rel=\"apple-touch-icon\" href=\"/icons/apple-touch-icon.png\" />\n        \n        {/* Fonts */}\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;600;700&display=swap\"\n          rel=\"stylesheet\"\n        />\n        \n        {/* Favicon */}\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n        \n        {/* Performance hints */}\n        <link rel=\"dns-prefetch\" href={process.env.NEXT_PUBLIC_API_URL} />\n        <link rel=\"preconnect\" href={process.env.NEXT_PUBLIC_WS_URL} />\n      </Head>\n\n      <ErrorBoundary>\n        <QueryClientProvider client={queryClient}>\n          <ThemeProvider>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <SnackbarProvider\n                maxSnack={3}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                autoHideDuration={5000}\n                preventDuplicate\n              >\n                <AuthProvider>\n                  <LoadingProvider>\n                    <Component {...pageProps} />\n                  </LoadingProvider>\n                </AuthProvider>\n              </SnackbarProvider>\n            </LocalizationProvider>\n          </ThemeProvider>\n          \n          {/* React Query DevTools - only in development */}\n          {process.env.NODE_ENV === 'development' && (\n            <ReactQueryDevtools initialIsOpen={false} />\n          )}\n        </QueryClientProvider>\n      </ErrorBoundary>\n    </>\n  );\n}\n\nexport default MyApp;"