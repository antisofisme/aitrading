import { createTheme, ThemeOptions } from '@mui/material/styles';\nimport { deepmerge } from '@mui/utils';\n\n// Color palette\nconst palette = {\n  light: {\n    primary: {\n      main: '#1976d2',\n      light: '#42a5f5',\n      dark: '#1565c0',\n      contrastText: '#fff',\n    },\n    secondary: {\n      main: '#dc004e',\n      light: '#ff5983',\n      dark: '#9a0036',\n      contrastText: '#fff',\n    },\n    success: {\n      main: '#2e7d32',\n      light: '#4caf50',\n      dark: '#1b5e20',\n    },\n    error: {\n      main: '#d32f2f',\n      light: '#ef5350',\n      dark: '#c62828',\n    },\n    warning: {\n      main: '#ed6c02',\n      light: '#ff9800',\n      dark: '#e65100',\n    },\n    info: {\n      main: '#0288d1',\n      light: '#03a9f4',\n      dark: '#01579b',\n    },\n    background: {\n      default: '#fafafa',\n      paper: '#ffffff',\n    },\n    trading: {\n      profit: '#2e7d32',\n      loss: '#d32f2f',\n      neutral: '#757575',\n      buy: '#4caf50',\n      sell: '#f44336',\n    },\n  },\n  dark: {\n    primary: {\n      main: '#90caf9',\n      light: '#e3f2fd',\n      dark: '#42a5f5',\n      contrastText: '#000',\n    },\n    secondary: {\n      main: '#f48fb1',\n      light: '#fce4ec',\n      dark: '#ad1457',\n      contrastText: '#000',\n    },\n    success: {\n      main: '#66bb6a',\n      light: '#c8e6c9',\n      dark: '#388e3c',\n    },\n    error: {\n      main: '#f44336',\n      light: '#ffcdd2',\n      dark: '#d32f2f',\n    },\n    warning: {\n      main: '#ffa726',\n      light: '#ffe0b2',\n      dark: '#f57c00',\n    },\n    info: {\n      main: '#29b6f6',\n      light: '#b3e5fc',\n      dark: '#0277bd',\n    },\n    background: {\n      default: '#121212',\n      paper: '#1e1e1e',\n    },\n    trading: {\n      profit: '#66bb6a',\n      loss: '#f44336',\n      neutral: '#9e9e9e',\n      buy: '#4caf50',\n      sell: '#f44336',\n    },\n  },\n};\n\n// Typography\nconst typography = {\n  fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  h1: {\n    fontSize: '2.125rem',\n    fontWeight: 300,\n    lineHeight: 1.167,\n  },\n  h2: {\n    fontSize: '1.5rem',\n    fontWeight: 400,\n    lineHeight: 1.2,\n  },\n  h3: {\n    fontSize: '1.25rem',\n    fontWeight: 500,\n    lineHeight: 1.167,\n  },\n  h4: {\n    fontSize: '1.125rem',\n    fontWeight: 500,\n    lineHeight: 1.235,\n  },\n  h5: {\n    fontSize: '1rem',\n    fontWeight: 500,\n    lineHeight: 1.334,\n  },\n  h6: {\n    fontSize: '0.875rem',\n    fontWeight: 600,\n    lineHeight: 1.6,\n  },\n  subtitle1: {\n    fontSize: '1rem',\n    fontWeight: 400,\n    lineHeight: 1.75,\n  },\n  subtitle2: {\n    fontSize: '0.875rem',\n    fontWeight: 500,\n    lineHeight: 1.57,\n  },\n  body1: {\n    fontSize: '1rem',\n    fontWeight: 400,\n    lineHeight: 1.5,\n  },\n  body2: {\n    fontSize: '0.875rem',\n    fontWeight: 400,\n    lineHeight: 1.43,\n  },\n  caption: {\n    fontSize: '0.75rem',\n    fontWeight: 400,\n    lineHeight: 1.66,\n  },\n  overline: {\n    fontSize: '0.75rem',\n    fontWeight: 400,\n    lineHeight: 2.66,\n    textTransform: 'uppercase' as const,\n  },\n};\n\n// Component customizations\nconst components = {\n  MuiCssBaseline: {\n    styleOverrides: {\n      '*': {\n        boxSizing: 'border-box',\n      },\n      html: {\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        height: '100%',\n        margin: 0,\n        padding: 0,\n      },\n      '#__next': {\n        height: '100%',\n      },\n      '.recharts-cartesian-axis-tick-value': {\n        fontSize: '12px',\n      },\n    },\n  },\n  MuiAppBar: {\n    styleOverrides: {\n      root: {\n        boxShadow: '0px 1px 3px rgba(0, 0, 0, 0.12)',\n      },\n    },\n  },\n  MuiCard: {\n    styleOverrides: {\n      root: {\n        borderRadius: 8,\n        boxShadow: '0px 2px 4px rgba(0, 0, 0, 0.1)',\n      },\n    },\n  },\n  MuiButton: {\n    styleOverrides: {\n      root: {\n        borderRadius: 6,\n        textTransform: 'none' as const,\n        fontWeight: 500,\n      },\n      containedPrimary: {\n        boxShadow: '0px 2px 4px rgba(25, 118, 210, 0.3)',\n        '&:hover': {\n          boxShadow: '0px 4px 8px rgba(25, 118, 210, 0.4)',\n        },\n      },\n    },\n  },\n  MuiTab: {\n    styleOverrides: {\n      root: {\n        textTransform: 'none' as const,\n        fontWeight: 500,\n        minHeight: 48,\n      },\n    },\n  },\n  MuiTableCell: {\n    styleOverrides: {\n      root: {\n        borderBottom: '1px solid rgba(224, 224, 224, 0.5)',\n      },\n      head: {\n        fontWeight: 600,\n        backgroundColor: 'rgba(0, 0, 0, 0.02)',\n      },\n    },\n  },\n  MuiChip: {\n    styleOverrides: {\n      root: {\n        borderRadius: 4,\n      },\n    },\n  },\n};\n\n// Shape and spacing\nconst shape = {\n  borderRadius: 8,\n};\n\nconst spacing = 8;\n\n// Breakpoints\nconst breakpoints = {\n  values: {\n    xs: 0,\n    sm: 600,\n    md: 900,\n    lg: 1200,\n    xl: 1536,\n  },\n};\n\n// Custom theme properties\ndeclare module '@mui/material/styles' {\n  interface Palette {\n    trading: {\n      profit: string;\n      loss: string;\n      neutral: string;\n      buy: string;\n      sell: string;\n    };\n  }\n\n  interface PaletteOptions {\n    trading?: {\n      profit?: string;\n      loss?: string;\n      neutral?: string;\n      buy?: string;\n      sell?: string;\n    };\n  }\n}\n\n// Theme factory function\nconst createAppTheme = (mode: 'light' | 'dark'): ThemeOptions => {\n  const baseTheme = {\n    palette: {\n      mode,\n      ...palette[mode],\n    },\n    typography,\n    components,\n    shape,\n    spacing,\n    breakpoints,\n  };\n\n  return baseTheme;\n};\n\n// Export themes\nexport const lightTheme = createTheme(createAppTheme('light'));\nexport const darkTheme = createTheme(createAppTheme('dark'));\n\n// Default theme\nexport const defaultTheme = lightTheme;\n\n// Theme utility functions\nexport const getTheme = (mode: 'light' | 'dark') => {\n  return mode === 'dark' ? darkTheme : lightTheme;\n};\n\nexport const getOppositeTheme = (mode: 'light' | 'dark') => {\n  return mode === 'dark' ? lightTheme : darkTheme;\n};\n\n// Trading-specific theme utilities\nexport const getTradingColor = (value: number, theme: any) => {\n  if (value > 0) return theme.palette.trading.profit;\n  if (value < 0) return theme.palette.trading.loss;\n  return theme.palette.trading.neutral;\n};\n\nexport const getPositionTypeColor = (type: 'buy' | 'sell', theme: any) => {\n  return type === 'buy' ? theme.palette.trading.buy : theme.palette.trading.sell;\n};\n\n// Export default\nexport default defaultTheme;