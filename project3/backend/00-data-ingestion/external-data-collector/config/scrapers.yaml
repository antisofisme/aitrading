# External Data Collector Configuration
# Economic Calendar and Market Data Scrapers

scrapers:
  # MQL5 Economic Calendar
  # Testing with regex parser (Z.ai disabled temporarily)
  mql5_economic_calendar:
    enabled: true
    source: mql5.com
    priority: 1
    scrape_interval: 3600  # 1 hour (3600 seconds)
    metadata:
      data_type: economic_calendar
      update_mode: incremental  # incremental or full
      parser: zai  # zai or regex
      rate_limit_seconds: 2
      date_tracking: true

  # FRED Economic Indicators
  fred_economic:
    enabled: true
    source: fred.stlouisfed.org
    priority: 2
    scrape_interval: 14400  # 4 hours (14400 seconds)
    api_key: ${FRED_API_KEY:-}
    indicators:
      - GDP        # Gross Domestic Product
      - UNRATE     # Unemployment Rate
      - CPIAUCSL   # Consumer Price Index
      - DFF        # Federal Funds Rate
      - DGS10      # 10-Year Treasury Rate
      - DEXUSEU    # USD/EUR Exchange Rate
      - DEXJPUS    # JPY/USD Exchange Rate

  # CoinGecko Crypto Sentiment
  coingecko_sentiment:
    enabled: true
    source: coingecko.com
    priority: 3
    scrape_interval: 1800  # 30 minutes (1800 seconds)
    coins:
      - bitcoin
      - ethereum
      - ripple
      - cardano
      - solana

  # Fear & Greed Index
  fear_greed_index:
    enabled: true
    source: alternative.me
    priority: 4
    scrape_interval: 3600  # 1 hour (3600 seconds)

  # Yahoo Finance Commodities
  yahoo_finance_commodity:
    enabled: true
    source: finance.yahoo.com
    priority: 5
    scrape_interval: 1800  # 30 minutes (1800 seconds)
    symbols:
      - GC=F   # Gold Futures
      - CL=F   # Crude Oil Futures
      - SI=F   # Silver Futures
      - HG=F   # Copper Futures
      - NG=F   # Natural Gas Futures

  # Market Sessions
  market_sessions:
    enabled: true
    source: market_sessions
    priority: 6
    scrape_interval: 300  # 5 minutes (300 seconds)
    sessions:
      tokyo:
        open: "00:00"
        close: "09:00"
      london:
        open: "08:00"
        close: "16:30"
      newyork:
        open: "13:00"
        close: "22:00"
      sydney:
        open: "22:00"
        close: "07:00"

storage:
  # Storage type: json or postgresql
  type: json  # Use JSON file for tracking (fallback)

  # JSON file path
  json_path: /app/data

  # PostgreSQL configuration (if type: postgresql)
  postgresql:
    host: ${DB_HOST:-suho-postgresql}
    port: ${DB_PORT:-5432}
    database: ${DB_NAME:-aitrading}
    user: ${DB_USER:-postgres}
    password: ${DB_PASSWORD:-}
    schema: public

messaging:
  # NATS configuration (real-time distribution)
  nats:
    enabled: true  # ✅ ENABLED for real-time data
    host: suho-nats-server
    port: 4222
    topics:
      base: market.external  # Base subject pattern
      # Specific topics (optional overrides):
      # economic_calendar: market.external.economic_calendar
      # news: market.external.news
      # sentiment: market.external.sentiment
      # cot_report: market.external.cot_report

  # Kafka configuration (persistence + backup)
  kafka:
    enabled: true  # ✅ ENABLED for persistence
    bootstrap_servers: suho-kafka:9092
    topics:
      # Default: market.external.{data_type}
      # Can override specific types:
      economic_calendar: market.external.economic_calendar
      fred_economic: market.external.fred_economic
      crypto_sentiment: market.external.crypto_sentiment
      fear_greed_index: market.external.fear_greed_index
      commodity_prices: market.external.commodity_prices
      market_sessions: market.external.market_sessions
      news: market.external.news
      sentiment: market.external.sentiment
      cot_report: market.external.cot_report
      market_context: market.external.market_context
      alternative_data: market.external.alternative_data

# Historical backfill configuration
backfill:
  enabled: true  # Set to true to run backfill on first start
  months_back: ${ECONOMIC_CALENDAR_HISTORY_MONTHS:-1}  # How many months to backfill (default: 1)
  batch_days: 7   # Days per batch (smaller batches for better progress tracking)
  rate_limit_seconds: 2

# Monitoring configuration
monitoring:
  metrics_enabled: true
  health_check_port: 8080
  log_level: ${LOG_LEVEL:-INFO}
