syntax = "proto3";

package suho.trading.v1;

option go_package = "github.com/suho/trading/proto/trading/v1";
option java_package = "com.suho.trading.v1";
option java_outer_classname = "TradingProto";

// Common Types
message Timestamp {
  int64 seconds = 1;
  int32 nanos = 2;
}

message Money {
  string currency_code = 1;
  int64 units = 2;
  int32 nanos = 3;
}

// Symbol and Market Data
enum Symbol {
  SYMBOL_UNSPECIFIED = 0;
  EURUSD = 1;
  GBPUSD = 2;
  USDJPY = 3;
  AUDUSD = 4;
  USDCAD = 5;
  USDCHF = 6;
  NZDUSD = 7;
  EURGBP = 8;
  EURJPY = 9;
  GBPJPY = 10;
}

enum TradingAction {
  TRADING_ACTION_UNSPECIFIED = 0;
  BUY = 1;
  SELL = 2;
  CLOSE = 3;
  MODIFY = 4;
}

enum OrderType {
  ORDER_TYPE_UNSPECIFIED = 0;
  MARKET = 1;
  LIMIT = 2;
  STOP = 3;
  STOP_LIMIT = 4;
}

enum OrderStatus {
  ORDER_STATUS_UNSPECIFIED = 0;
  PENDING = 1;
  FILLED = 2;
  PARTIALLY_FILLED = 3;
  CANCELLED = 4;
  REJECTED = 5;
}

// Price Data
message PriceData {
  Symbol symbol = 1;
  double bid = 2;
  double ask = 3;
  double spread = 4;
  Timestamp timestamp = 5;
  int64 volume = 6;
}

message PriceStream {
  string user_id = 1;
  repeated PriceData prices = 2;
  Timestamp timestamp = 3;
  string source = 4;
}

// Trading Commands
message TradingCommand {
  string command_id = 1;
  string user_id = 2;
  Symbol symbol = 3;
  TradingAction action = 4;
  OrderType order_type = 5;
  double volume = 6;
  double price = 7;
  double stop_loss = 8;
  double take_profit = 9;
  string comment = 10;
  Timestamp timestamp = 11;
}

message TradingResponse {
  string command_id = 1;
  string user_id = 2;
  bool success = 3;
  string message = 4;
  string order_id = 5;
  OrderStatus status = 6;
  double executed_price = 7;
  double executed_volume = 8;
  Timestamp execution_time = 9;
}

// Account Information
message AccountProfile {
  string user_id = 1;
  string account_number = 2;
  Money balance = 3;
  Money equity = 4;
  Money margin = 5;
  Money free_margin = 6;
  double margin_level = 7;
  string server = 8;
  string company = 9;
  Timestamp last_update = 10;
}

// Trading Signals
message TradingSignal {
  string signal_id = 1;
  Symbol symbol = 2;
  TradingAction action = 3;
  double confidence = 4;
  double entry_price = 5;
  double stop_loss = 6;
  double take_profit = 7;
  string strategy = 8;
  string reason = 9;
  Timestamp generated_at = 10;
  Timestamp valid_until = 11;
}

// Input Messages (TO API Gateway)
message ClientMT5Input {
  oneof message_type {
    PriceStream price_stream = 1;
    TradingCommand trading_command = 2;
    AccountProfile account_profile = 3;
  }
  string user_id = 4;
  Timestamp timestamp = 5;
}

// Output Messages (FROM services)
message TradingEngineOutput {
  string user_id = 1;
  repeated TradingSignal signals = 2;
  repeated TradingResponse responses = 3;
  Timestamp timestamp = 4;
}

message AnalyticsOutput {
  string user_id = 1;
  map<string, double> performance_metrics = 2;
  repeated string alerts = 3;
  string alert_level = 4; // info, warning, error
  Timestamp timestamp = 5;
}

message MLOutput {
  string user_id = 1;
  repeated TradingSignal predictions = 2;
  double model_confidence = 3;
  string model_version = 4;
  Timestamp timestamp = 5;
}

message NotificationOutput {
  string user_id = 1;
  repeated string channels = 2; // telegram, email, sms, dashboard
  string title = 3;
  string message = 4;
  string priority = 5; // low, medium, high, urgent
  map<string, string> metadata = 6;
  Timestamp timestamp = 7;
}