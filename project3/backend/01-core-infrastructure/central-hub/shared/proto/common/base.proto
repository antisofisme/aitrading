syntax = "proto3";

package common.v1;

option go_package = "github.com/aitrading/proto/common/v1";
option java_package = "com.aitrading.proto.common.v1";
option csharp_namespace = "AiTrading.Proto.Common.V1";

// Base message types used across all services

// Timestamp with nanosecond precision
message Timestamp {
  int64 seconds = 1;      // Seconds since Unix epoch
  int32 nanos = 2;        // Nanoseconds within the second
}

// Money representation with currency
message Money {
  string currency_code = 1;  // ISO 4217 currency code (USD, EUR, etc)
  int64 units = 2;          // Whole units of currency
  int32 nanos = 3;          // Nano units (1/10^9 of a unit)
}

// User identification and context
message UserContext {
  string user_id = 1;
  string tenant_id = 2;
  string session_id = 3;
  repeated string roles = 4;
  map<string, string> permissions = 5;
}

// Base message for all inter-service communication
message BaseMessage {
  string tenant_id = 1;        // Required for multi-tenant isolation
  Timestamp timestamp = 2;     // Message creation time
  string correlation_id = 3;   // Request tracing ID
  string source_service = 4;   // Originating service name
  string message_version = 5;  // Schema version
}

// Generic pagination
message Pagination {
  int32 page = 1;
  int32 limit = 2;
  int64 total = 3;
  bool has_next = 4;
}

// Generic response wrapper
message Response {
  bool success = 1;
  string message = 2;
  repeated string errors = 3;
  Timestamp timestamp = 4;
  map<string, string> metadata = 5;
}

// Health check message
message HealthCheck {
  string service_name = 1;
  string status = 2;  // "healthy", "degraded", "unhealthy"
  Timestamp checked_at = 3;
  map<string, string> details = 4;
}