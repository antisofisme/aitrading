# Central Hub - Offline Dockerfile (SUPER FAST BUILD)
# No downloads needed - all packages pre-downloaded like node_modules

FROM python:3.11-slim

WORKDIR /app

# Install system dependencies only (minimal, cached)
RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy offline packages first (like node_modules)
COPY pip_packages/ ./pip_packages/

# Install ALL packages from offline files (NO DOWNLOADS!)
RUN pip install --no-index --find-links ./pip_packages/ \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    pydantic==2.5.0 \
    starlette==0.27.0 \
    python-multipart==0.0.6 \
    httpx==0.25.2 \
    asyncpg==0.29.0 \
    aiopg==1.4.0 \
    redis==5.0.1 \
    aioredis==2.0.1 \
    nats-py==2.6.0 \
    confluent-kafka==2.3.0 \
    grpcio==1.60.0 \
    grpcio-tools==1.60.0 \
    protobuf==4.25.1 \
    prometheus-client==0.19.0 \
    python-json-logger==2.0.7 \
    structlog==23.2.0 \
    cachetools==5.3.2 \
    psutil==5.9.6 \
    aiofiles==23.2.1

# Clean up offline packages (optional - keep for debugging)
# RUN rm -rf ./pip_packages/

# Copy application code (this layer rebuilds when code changes)
COPY base/ ./base/
COPY shared/ ./shared/

# Create logs directory
RUN mkdir -p /app/logs

# Expose port
EXPOSE 7000

# Health check using python instead of curl
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD python -c "import urllib.request; urllib.request.urlopen('http://localhost:7000/health')" || exit 1

# Set Python path and run application
ENV PYTHONPATH=/app/shared:/app/base
WORKDIR /app/base
CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "7000"]