# Docker Compose Configuration - Compliance Services Extension
# This extends the main docker-compose-server.yml with compliance services

version: '3.8'

services:
  # Compliance & Regulatory Services (8017-8019)
  compliance-monitor:
    build: ./server/compliance-monitor
    ports: ["8017:8017"]
    environment:
      - MIFID_II_ENABLED=true
      - EMIR_REPORTING=true
      - MARKET_ABUSE_DETECTION=true
      - KAFKA_BROKERS=kafka:9092
      - REGULATORY_API_ENDPOINTS=${REGULATORY_API_ENDPOINTS}
      - DATABASE_URL=${POSTGRES_URL}
      - REDIS_URL=${DRAGONFLYDB_URL}
      - LOG_LEVEL=INFO
    depends_on:
      - database-service
      - kafka
      - redis
    volumes:
      - compliance_reports:/app/reports
      - compliance_config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8017/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - aitrading_network
      - compliance_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  audit-trail:
    build: ./server/audit-trail
    ports: ["8018:8018"]
    environment:
      - EVENT_STORE_ENABLED=true
      - RETENTION_YEARS=7
      - KAFKA_BROKERS=kafka:9092
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - DATABASE_URL=${POSTGRES_URL}
      - ENCRYPTION_KEY=${AUDIT_ENCRYPTION_KEY}
      - IMMUTABLE_STORAGE=true
    depends_on:
      - database-service
      - kafka
      - elasticsearch
    volumes:
      - audit_logs:/app/audit
      - audit_config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8018/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - aitrading_network
      - compliance_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.7'

  regulatory-reporting:
    build: ./server/regulatory-reporting
    ports: ["8019:8019"]
    environment:
      - AIRFLOW_ENABLED=true
      - REPORT_SCHEDULE=daily,weekly,monthly
      - KAFKA_BROKERS=kafka:9092
      - REGULATORY_APIS=${REGULATORY_APIS}
      - DATABASE_URL=${POSTGRES_URL}
      - COMPLIANCE_MONITOR_URL=http://compliance-monitor:8017
      - AUDIT_TRAIL_URL=http://audit-trail:8018
      - REPORT_OUTPUT_PATH=/app/reports
    depends_on:
      - compliance-monitor
      - audit-trail
      - airflow
    volumes:
      - regulatory_reports:/app/reports
      - reporting_templates:/app/templates
      - reporting_config:/app/config
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8019/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - aitrading_network
      - compliance_network
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '0.6'

  # Redis for compliance caching
  redis:
    image: redis/redis-stack:latest
    ports: ["6379:6379", "8001:8001"]
    environment:
      - REDIS_ARGS=--save 900 1 --save 300 10 --save 60 10000
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - aitrading_network
      - compliance_network

networks:
  aitrading_network:
    external: true
  compliance_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    encrypt: true

volumes:
  compliance_reports:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/compliance/reports
  compliance_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./config/compliance
  audit_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/audit/logs
  audit_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./config/audit
  regulatory_reports:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/regulatory/reports
  reporting_templates:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./templates/regulatory
  reporting_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./config/regulatory
  redis_data:
    driver: local

# Security configuration
secrets:
  regulatory_api_key:
    file: ./secrets/regulatory_api_key.txt
  audit_encryption_key:
    file: ./secrets/audit_encryption_key.txt
  compliance_certificates:
    file: ./secrets/compliance_certs.pem